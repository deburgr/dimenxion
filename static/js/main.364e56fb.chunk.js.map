{"version":3,"sources":["MintCountdown.tsx","MintButton.tsx","img/portals.gif","img/logo.png","Icons.tsx","img/pink-bg-img.png","Footer.tsx","assets/img/png/headerlogo.png","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils.ts","candy-machine.ts","connection.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","padding","spacing","margin","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","done","marginBottom","fontWeight","item","MintCountdown","date","status","style","onComplete","classes","renderer","days","hours","minutes","seconds","completed","className","Paper","elevation","MintButton","onMint","candyMachine","isMinting","setIsMinting","isActive","wallet","useWallet","connection","useConnection","useState","verified","setVerified","useGateway","requestGatewayToken","gatewayStatus","webSocketSubscriptionId","setWebSocketSubscriptionId","clicked","setClicked","waitForActiveToken","setWaitForActiveToken","useEffect","mint","a","removeAccountChangeListener","previousGatewayStatus","value","ref","useRef","current","usePrevious","fromStates","GatewayStatus","NOT_REQUESTED","REFRESH_TOKEN_REQUIRED","invalidToStates","UNKNOWN","find","state","console","log","ACTIVE","disabled","onClick","gatekeeper","network","gatekeeperNetwork","toBase58","CIVIC_GATEKEEPER_NETWORK","findGatewayToken","publicKey","gatewayToken","isValid","window","open","getGatewayTokenAddressForOwnerAndGatekeeperNetwork","gatewayTokenAddress","onGatewayTokenChange","Error","isSoldOut","CircularProgress","isPresale","isWhitelistOnly","TwitterIcon","viewBox","fill","xmlns","x","y","rx","fillOpacity","stroke","filter","clipPath","d","id","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","x1","y1","x2","y2","gradientUnits","stopColor","offset","transform","InstaIcon","DiscordIcon","Footer","src","logoimg","alt","href","purple","getCountdownDate","endSettings","endSettingType","toDate","number","goLiveDate","anchor","Date","getTime","undefined","Home","props","isUserMinting","setIsUserMinting","setCandyMachine","message","severity","alertState","setAlertState","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","setIsPresale","isValidBalance","setIsValidBalance","discountPrice","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","rpcUrl","rpcHost","cluster","throwConfetti","confetti","particleCount","spread","origin","anchorWallet","useMemo","signAllTransactions","signTransaction","refreshCandyMachineState","useCallback","commitment","error","hideDuration","Connection","candyMachineId","getCandyMachineState","cndy","active","toNumber","presale","isWLUser","userPrice","price","whitelistMintSettings","PublicKey","getAtaForMint","token","getTokenAccountBalance","balance","parseInt","amount","tokenMint","valid","gte","getBalance","limit","Math","min","itemsAvailable","itemsRedeemed","getCollectionPDA","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","burnEveryTime","expireOnUse","startsWith","beforeTransactions","afterTransactions","connected","program","createAccountsForMint","setupMint","err","transaction","awaitTransactionSignatureConfirmation","txTimeout","mintOneToken","mintResult","metadataStatus","mintTxId","provider","metadataKey","remaining","msg","code","location","reload","indexOf","loop","setTimeout","HeaderLogo","portals","formatNumber","asNumber","LinearProgress","variant","now","CANDY_MACHINE_PROGRAM","clusterUrl","options","autoShowModal","val","Snackbar","autoHideDuration","onClose","Alert","require","createTheme","palette","type","process","e","getCandyMachineId","clusterApiUrl","App","AOS","init","once","endpoint","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","DEFAULT_TIMEOUT","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","numberFormater","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","LAMPORTS_PER_SOL","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CIVIC","buyer","findProgramAddress","toBuffer","TOKEN_PROGRAM_ID","getNetworkExpire","Buffer","from","getNetworkToken","TOKEN_METADATA_PROGRAM_ID","txid","timeout","queryStatus","slot","confirmations","subId","Promise","resolve","reject","getSignatureStatuses","signatureStatuses","sleep","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","preflightCommitment","getProgramState","fetchIdl","idl","account","fetch","getCurrentBlockTime","getSlot","getBlockTime","all","currentBlockTime","timeDiff","authority","treasury","hiddenSettings","getMasterEdition","getMetadata","getCandyMachineCreator","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","Keypair","generate","userTokenAccountAddress","signers","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","instructions","sendTransactions","SequenceType","StopOnFailure","txs","userTokenAccount","setupState","userPayingAccountAddress","remainingAccounts","push","whitelistToken","metadataAddress","masterEdition","candyMachineCreator","creatorBump","map","rm","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_SLOT_HASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","instructionsMatrix","signersMatrix","txns","t","mintTxn","ms","instructionSet","signersSet","sequenceType","Parallel","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","Transaction","forEach","add","recentBlockhash","blockhash","setSigners","s","partialSign","partiallySignedTransactions","signatures","sig","equals","fullySignedTransactions","signedTxns","concat","pendingTxns","signedTxnPromise","sendSignedTransaction","signedTransaction","getUnixTs","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","simulateResult","simulateTransaction","logs","line","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","onSignature","context"],"mappings":"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","file":"static/js/main.364e56fb.chunk.js","sourcesContent":["import { Paper } from \"@material-ui/core\";\nimport Countdown from \"react-countdown\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      padding: theme.spacing(0),\n      \"& > *\": {\n        margin: theme.spacing(0.4),\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"#384457\",\n        color: \"white\",\n        borderRadius: 5,\n        fontSize: 10,\n      },\n    },\n    done: {\n      display: \"flex\",\n      margin: 0,\n      marginBottom: theme.spacing(0.5),\n      height: theme.spacing(3.5),\n      padding: theme.spacing(1),\n      flexDirection: \"column\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      background: \"#384457\",\n      color: \"white\",\n      borderRadius: 5,\n      fontWeight: \"bold\",\n      fontSize: 18,\n    },\n    item: {\n      fontWeight: \"bold\",\n      fontSize: 18,\n    },\n  })\n);\n\ninterface MintCountdownProps {\n  date: Date | undefined;\n  style?: React.CSSProperties;\n  status?: string;\n  onComplete?: () => void;\n}\n\ninterface MintCountdownRender {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  completed: boolean;\n}\n\nexport const MintCountdown: React.FC<MintCountdownProps> = ({\n  date,\n  status,\n  style,\n  onComplete,\n}) => {\n  const classes = useStyles();\n  const renderCountdown = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed,\n  }: MintCountdownRender) => {\n    hours += days * 24;\n    if (completed) {\n      return status ? <span className={classes.done}>{status}</span> : null;\n    } else {\n      return (\n        <div className={classes.root} style={style}>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {hours < 10 ? `0${hours}` : hours}\n            </span>\n            <span>hrs</span>\n          </Paper>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {minutes < 10 ? `0${minutes}` : minutes}\n            </span>\n            <span>mins</span>\n          </Paper>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {seconds < 10 ? `0${seconds}` : seconds}\n            </span>\n            <span>secs</span>\n          </Paper>\n        </div>\n      );\n    }\n  };\n\n  if (date) {\n    return (\n      <Countdown\n        date={date}\n        onComplete={onComplete}\n        renderer={renderCountdown}\n      />\n    );\n  } else {\n    return null;\n  }\n};\n","\nimport { CandyMachineAccount } from \"./candy-machine\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { GatewayStatus, useGateway } from \"@civic/solana-gateway-react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport {\n  findGatewayToken,\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\n  onGatewayTokenChange,\n  removeAccountChangeListener,\n} from \"@identity.com/solana-gateway-ts\";\nimport { CIVIC_GATEKEEPER_NETWORK } from \"./utils\";\n\n// add your own styles here\n\nexport const MintButton = ({\n  onMint,\n  candyMachine,\n  isMinting,\n  setIsMinting,\n  isActive,\n}: {\n  onMint: () => Promise<void>;\n  candyMachine?: CandyMachineAccount;\n  isMinting: boolean;\n  setIsMinting: (val: boolean) => void;\n  isActive: boolean;\n}) => {\n  const wallet = useWallet();\n  const connection = useConnection();\n  const [verified, setVerified] = useState(false);\n  const { requestGatewayToken, gatewayStatus } = useGateway();\n  const [webSocketSubscriptionId, setWebSocketSubscriptionId] = useState(-1);\n  const [clicked, setClicked] = useState(false);\n  const [waitForActiveToken, setWaitForActiveToken] = useState(false);\n\n  const getMintButtonContent = () => {\n    if (candyMachine?.state.isSoldOut) {\n      return \"SOLD OUT\";\n    } else if (isMinting) {\n      return <CircularProgress />;\n    } else if (\n      candyMachine?.state.isPresale ||\n      candyMachine?.state.isWhitelistOnly\n    ) {\n      return \"WHITELIST MINT\";\n    }\n\n    return \"MINT\";\n  };\n\n  useEffect(() => {\n    const mint = async () => {\n      await removeAccountChangeListener(\n        connection.connection,\n        webSocketSubscriptionId\n      );\n      await onMint();\n\n      setClicked(false);\n      setVerified(false);\n    };\n    if (verified && clicked) {\n      mint();\n    }\n  }, [\n    verified,\n    clicked,\n    connection.connection,\n    onMint,\n    webSocketSubscriptionId,\n  ]);\n\n  const previousGatewayStatus = usePrevious(gatewayStatus);\n  useEffect(() => {\n    const fromStates = [\n      GatewayStatus.NOT_REQUESTED,\n      GatewayStatus.REFRESH_TOKEN_REQUIRED,\n    ];\n    const invalidToStates = [...fromStates, GatewayStatus.UNKNOWN];\n    if (\n      fromStates.find((state) => previousGatewayStatus === state) &&\n      !invalidToStates.find((state) => gatewayStatus === state)\n    ) {\n      setIsMinting(true);\n    }\n    console.log(\"change: \", GatewayStatus[gatewayStatus]);\n  }, [waitForActiveToken, previousGatewayStatus, gatewayStatus]);\n\n  useEffect(() => {\n    if (waitForActiveToken && gatewayStatus === GatewayStatus.ACTIVE) {\n      console.log(\"Minting after token active\");\n      setWaitForActiveToken(false);\n      onMint();\n    }\n  }, [waitForActiveToken, gatewayStatus, onMint]);\n\n  return (\n    <button className=\"btn-bg bg-transparent border-0 fs-sm text-white\"\n      disabled={isMinting || !isActive}\n      onClick={async () => {\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\n          const network =\n            candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();\n          if (network === CIVIC_GATEKEEPER_NETWORK) {\n            if (gatewayStatus === GatewayStatus.ACTIVE) {\n              await onMint();\n            } else {\n              // setIsMinting(true);\n              setWaitForActiveToken(true);\n              await requestGatewayToken();\n              console.log(\"after: \", gatewayStatus);\n            }\n          } else if (\n            network === \"ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE\" ||\n            network === \"tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt\"\n          ) {\n            setClicked(true);\n            const gatewayToken = await findGatewayToken(\n              connection.connection,\n              wallet.publicKey!,\n              candyMachine.state.gatekeeper.gatekeeperNetwork\n            );\n\n            if (gatewayToken?.isValid()) {\n              await onMint();\n            } else {\n              window.open(\n                `https://verify.encore.fans/?gkNetwork=${network}`,\n                \"_blank\"\n              );\n\n              const gatewayTokenAddress =\n                await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n                  wallet.publicKey!,\n                  candyMachine.state.gatekeeper.gatekeeperNetwork\n                );\n\n              setWebSocketSubscriptionId(\n                onGatewayTokenChange(\n                  connection.connection,\n                  gatewayTokenAddress,\n                  () => setVerified(true),\n                  \"confirmed\"\n                )\n              );\n            }\n          } else {\n            setClicked(false);\n            throw new Error(`Unknown Gatekeeper Network: ${network}`);\n          }\n        } else {\n          await onMint();\n          setClicked(false);\n        }\n      }}\n    >\n      {getMintButtonContent()}\n    </button>\n  );\n};\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","export default __webpack_public_path__ + \"static/media/portals.8452aa40.gif\";","export default __webpack_public_path__ + \"static/media/logo.b23474fc.png\";","export const TwitterIcon = () => {\r\n    return (\r\n      <svg\r\n        className=\"social-icons\"\r\n        width=\"55\"\r\n        height=\"54\"\r\n        viewBox=\"0 0 55 54\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect\r\n          x=\"2.50781\"\r\n          y=\"6.5\"\r\n          width=\"45\"\r\n          height=\"45\"\r\n          rx=\"22.5\"\r\n          fill=\"#DE1CF6\"\r\n          fillOpacity=\"0.05\"\r\n          stroke=\"url(#paint0_linear_94_775)\"\r\n        />\r\n        <g filter=\"url(#filter0_f_94_775)\">\r\n          <rect\r\n            x=\"4.50781\"\r\n            y=\"4.5\"\r\n            width=\"45\"\r\n            height=\"45\"\r\n            rx=\"22.5\"\r\n            stroke=\"url(#paint1_linear_94_775)\"\r\n          />\r\n        </g>\r\n        <g clipPath=\"url(#clip0_94_775)\">\r\n          <path\r\n            d=\"M36.6513 21.9376C35.8163 22.3076 34.9193 22.5576 33.9763 22.6706C34.9493 22.0884 35.6773 21.172 36.0243 20.0926C35.1102 20.6356 34.1097 21.0178 33.0663 21.2226C32.3647 20.4734 31.4354 19.9769 30.4226 19.81C29.4099 19.6432 28.3704 19.8154 27.4656 20.2998C26.5607 20.7843 25.8411 21.5539 25.4185 22.4893C24.9958 23.4246 24.8938 24.4733 25.1283 25.4726C23.276 25.3796 21.4639 24.8981 19.8097 24.0595C18.1555 23.2208 16.6962 22.0437 15.5263 20.6046C15.1263 21.2946 14.8963 22.0946 14.8963 22.9466C14.8959 23.7136 15.0847 24.4688 15.4462 25.1453C15.8076 25.8218 16.3305 26.3986 16.9683 26.8246C16.2286 26.801 15.5052 26.6011 14.8583 26.2416V26.3016C14.8582 27.3773 15.2303 28.4199 15.9115 29.2526C16.5926 30.0852 17.5409 30.6565 18.5953 30.8696C17.9091 31.0553 17.1897 31.0826 16.4913 30.9496C16.7888 31.8752 17.3683 32.6846 18.1487 33.2645C18.9291 33.8444 19.8712 34.1657 20.8433 34.1836C19.1931 35.479 17.1552 36.1817 15.0573 36.1786C14.6857 36.1787 14.3144 36.157 13.9453 36.1136C16.0748 37.4827 18.5537 38.2094 21.0853 38.2066C29.6553 38.2066 34.3403 31.1086 34.3403 24.9526C34.3403 24.7526 34.3353 24.5506 34.3263 24.3506C35.2376 23.6915 36.0242 22.8755 36.6493 21.9406L36.6513 21.9376V21.9376Z\"\r\n            fill=\"url(#paint2_linear_94_775)\"\r\n          />\r\n        </g>\r\n        <defs>\r\n          <filter\r\n            id=\"filter0_f_94_775\"\r\n            x=\"0.0078125\"\r\n            y=\"0\"\r\n            width=\"54\"\r\n            height=\"54\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n            colorInterpolationFilters=\"sRGB\"\r\n          >\r\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n            <feBlend\r\n              mode=\"normal\"\r\n              in=\"SourceGraphic\"\r\n              in2=\"BackgroundImageFix\"\r\n              result=\"shape\"\r\n            />\r\n            <feGaussianBlur\r\n              stdDeviation=\"2\"\r\n              result=\"effect1_foregroundBlur_94_775\"\r\n            />\r\n          </filter>\r\n          <linearGradient\r\n            id=\"paint0_linear_94_775\"\r\n            x1=\"39.9174\"\r\n            y1=\"14.1458\"\r\n            x2=\"29.0794\"\r\n            y2=\"27.1649\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"paint1_linear_94_775\"\r\n            x1=\"41.9174\"\r\n            y1=\"12.1458\"\r\n            x2=\"31.0794\"\r\n            y2=\"25.1649\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"paint2_linear_94_775\"\r\n            x1=\"32.6578\"\r\n            y1=\"23.0168\"\r\n            x2=\"28.5525\"\r\n            y2=\"29.0831\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <clipPath id=\"clip0_94_775\">\r\n            <rect\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"white\"\r\n              transform=\"translate(13.0078 17)\"\r\n            />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n    );\r\n  };\r\n  export const InstaIcon = () => {\r\n    return (\r\n      <svg\r\n        className=\"mx-4 social-icons\"\r\n        width=\"55\"\r\n        height=\"54\"\r\n        viewBox=\"0 0 55 54\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect\r\n          x=\"2.50781\"\r\n          y=\"6.5\"\r\n          width=\"45\"\r\n          height=\"45\"\r\n          rx=\"22.5\"\r\n          fill=\"#DE1CF6\"\r\n          fillOpacity=\"0.05\"\r\n          stroke=\"url(#paint0_linear_94_782)\"\r\n        />\r\n        <g filter=\"url(#filter0_f_94_782)\">\r\n          <rect\r\n            x=\"4.50781\"\r\n            y=\"4.5\"\r\n            width=\"45\"\r\n            height=\"45\"\r\n            rx=\"22.5\"\r\n            stroke=\"url(#paint1_linear_94_782)\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"M25.0069 25.8753C23.2866 25.8753 21.8827 27.2792 21.8827 28.9995C21.8827 30.7198 23.2866 32.1237 25.0069 32.1237C26.7273 32.1237 28.1312 30.7198 28.1312 28.9995C28.1312 27.2792 26.7273 25.8753 25.0069 25.8753ZM34.3773 28.9995C34.3773 27.7058 34.389 26.4237 34.3163 25.1323C34.2437 23.6323 33.9015 22.3011 32.8046 21.2042C31.7054 20.105 30.3765 19.7652 28.8765 19.6925C27.5827 19.6198 26.3007 19.6316 25.0093 19.6316C23.7155 19.6316 22.4335 19.6198 21.1421 19.6925C19.6421 19.7652 18.3109 20.1073 17.214 21.2042C16.1148 22.3034 15.7749 23.6323 15.7023 25.1323C15.6296 26.4261 15.6413 27.7081 15.6413 28.9995C15.6413 30.2909 15.6296 31.5753 15.7023 32.8667C15.7749 34.3667 16.1171 35.698 17.214 36.7948C18.3132 37.8941 19.6421 38.2339 21.1421 38.3066C22.4359 38.3792 23.7179 38.3675 25.0093 38.3675C26.303 38.3675 27.5851 38.3792 28.8765 38.3066C30.3765 38.2339 31.7077 37.8917 32.8046 36.7948C33.9038 35.6956 34.2437 34.3667 34.3163 32.8667C34.3913 31.5753 34.3773 30.2933 34.3773 28.9995V28.9995ZM25.0069 33.8066C22.3468 33.8066 20.1999 31.6597 20.1999 28.9995C20.1999 26.3394 22.3468 24.1925 25.0069 24.1925C27.6671 24.1925 29.814 26.3394 29.814 28.9995C29.814 31.6597 27.6671 33.8066 25.0069 33.8066ZM30.0109 25.1183C29.3898 25.1183 28.8882 24.6167 28.8882 23.9956C28.8882 23.3745 29.3898 22.873 30.0109 22.873C30.6319 22.873 31.1335 23.3745 31.1335 23.9956C31.1337 24.1431 31.1048 24.2892 31.0484 24.4255C30.9921 24.5618 30.9094 24.6856 30.8051 24.7899C30.7008 24.8942 30.577 24.9768 30.4407 25.0332C30.3044 25.0895 30.1583 25.1185 30.0109 25.1183V25.1183Z\"\r\n          fill=\"url(#paint2_linear_94_782)\"\r\n        />\r\n        <defs>\r\n          <filter\r\n            id=\"filter0_f_94_782\"\r\n            x=\"0.0078125\"\r\n            y=\"0\"\r\n            width=\"54\"\r\n            height=\"54\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n            colorInterpolationFilters=\"sRGB\"\r\n          >\r\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n            <feBlend\r\n              mode=\"normal\"\r\n              in=\"SourceGraphic\"\r\n              in2=\"BackgroundImageFix\"\r\n              result=\"shape\"\r\n            />\r\n            <feGaussianBlur\r\n              stdDeviation=\"2\"\r\n              result=\"effect1_foregroundBlur_94_782\"\r\n            />\r\n          </filter>\r\n          <linearGradient\r\n            id=\"paint0_linear_94_782\"\r\n            x1=\"39.9174\"\r\n            y1=\"14.1458\"\r\n            x2=\"29.0794\"\r\n            y2=\"27.1649\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"paint1_linear_94_782\"\r\n            x1=\"41.9174\"\r\n            y1=\"12.1458\"\r\n            x2=\"31.0794\"\r\n            y2=\"25.1649\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"paint2_linear_94_782\"\r\n            x1=\"31.0827\"\r\n            y1=\"22.9489\"\r\n            x2=\"26.6681\"\r\n            y2=\"28.2521\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n    );\r\n  };\r\n  export const DiscordIcon = () => {\r\n    return (\r\n      <svg\r\n        className=\"social-icons\"\r\n        width=\"55\"\r\n        height=\"54\"\r\n        viewBox=\"0 0 55 54\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect\r\n          x=\"2.50781\"\r\n          y=\"6.5\"\r\n          width=\"45\"\r\n          height=\"45\"\r\n          rx=\"22.5\"\r\n          fill=\"#DE1CF6\"\r\n          fillOpacity=\"0.05\"\r\n          stroke=\"url(#paint0_linear_94_789)\"\r\n        />\r\n        <g filter=\"url(#filter0_f_94_789)\">\r\n          <rect\r\n            x=\"4.50781\"\r\n            y=\"4.5\"\r\n            width=\"45\"\r\n            height=\"45\"\r\n            rx=\"22.5\"\r\n            stroke=\"url(#paint1_linear_94_789)\"\r\n          />\r\n        </g>\r\n        <g clipPath=\"url(#clip0_94_789)\">\r\n          <path\r\n            d=\"M35.3253 19.493C33.7953 18.803 32.1553 18.293 30.4403 18.003C30.425 18 30.4092 18.0019 30.3951 18.0084C30.3809 18.0148 30.3691 18.0255 30.3613 18.039C30.1513 18.408 29.9173 18.889 29.7533 19.269C27.9344 18.9972 26.0852 18.9972 24.2663 19.269C24.0836 18.8478 23.8776 18.4372 23.6493 18.039C23.6416 18.0253 23.6298 18.0144 23.6157 18.0076C23.6016 18.0008 23.5858 17.9985 23.5703 18.001C21.8563 18.291 20.2163 18.801 18.6853 19.492C18.6721 19.4975 18.661 19.5069 18.6533 19.519C15.5413 24.094 14.6883 28.556 15.1073 32.962C15.1085 32.9727 15.1118 32.9832 15.1171 32.9926C15.1225 33.0021 15.1297 33.0104 15.1383 33.017C16.9547 34.3394 18.9806 35.3468 21.1313 35.997C21.1463 36.0016 21.1623 36.0016 21.1773 35.9969C21.1923 35.9923 21.2055 35.9832 21.2153 35.9709C21.6773 35.3509 22.0893 34.6959 22.4413 34.0079C22.4623 33.9679 22.4423 33.9199 22.4003 33.9039C21.7543 33.6607 21.1284 33.3671 20.5283 33.0259C20.5175 33.0198 20.5084 33.0111 20.5019 33.0005C20.4953 32.99 20.4914 32.978 20.4906 32.9656C20.4898 32.9532 20.4921 32.9408 20.4973 32.9295C20.5025 32.9183 20.5104 32.9084 20.5203 32.9009C20.6463 32.8079 20.7723 32.711 20.8923 32.614C20.9031 32.6052 20.9161 32.5997 20.9299 32.5979C20.9436 32.5961 20.9576 32.5982 20.9703 32.604C24.8973 34.368 29.1503 34.368 33.0313 32.604C33.044 32.5979 33.0581 32.5955 33.0721 32.5971C33.0861 32.5987 33.0993 32.6042 33.1103 32.6129C33.2303 32.7109 33.3553 32.8079 33.4823 32.9009C33.4923 32.9083 33.5003 32.918 33.5057 32.9292C33.511 32.9403 33.5135 32.9527 33.5129 32.9651C33.5123 32.9774 33.5087 32.9895 33.5023 33.0001C33.4959 33.0107 33.487 33.0196 33.4763 33.0259C32.8783 33.3699 32.2563 33.661 31.6033 33.903C31.5933 33.9066 31.5841 33.9123 31.5765 33.9198C31.5689 33.9272 31.5629 33.9362 31.559 33.9462C31.5551 33.9561 31.5534 33.9668 31.554 33.9774C31.5546 33.9881 31.5574 33.9985 31.5623 34.0079C31.9223 34.6949 32.3343 35.3489 32.7873 35.9699C32.7967 35.9827 32.8098 35.9922 32.8249 35.9972C32.8399 36.0022 32.8561 36.0025 32.8713 35.9979C35.0256 35.3496 37.0549 34.3417 38.8733 33.017C38.8822 33.0107 38.8896 33.0027 38.8951 32.9934C38.9006 32.9841 38.9041 32.9737 38.9053 32.9629C39.4053 27.8689 38.0673 23.443 35.3563 19.521C35.3496 19.5082 35.3386 19.4983 35.3253 19.493ZM23.0283 30.2789C21.8463 30.2789 20.8713 29.2099 20.8713 27.8989C20.8713 26.5869 21.8273 25.5189 23.0283 25.5189C24.2383 25.5189 25.2043 26.5959 25.1853 27.8989C25.1853 29.2109 24.2293 30.2789 23.0283 30.2789V30.2789ZM31.0033 30.2789C29.8203 30.2789 28.8463 29.2099 28.8463 27.8989C28.8463 26.5869 29.8013 25.5189 31.0033 25.5189C32.2133 25.5189 33.1793 26.5959 33.1603 27.8989C33.1603 29.2109 32.2143 30.2789 31.0033 30.2789V30.2789Z\"\r\n            fill=\"url(#paint2_linear_94_789)\"\r\n          />\r\n        </g>\r\n        <defs>\r\n          <filter\r\n            id=\"filter0_f_94_789\"\r\n            x=\"0.0078125\"\r\n            y=\"0\"\r\n            width=\"54\"\r\n            height=\"54\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n            colorInterpolationFilters=\"sRGB\"\r\n          >\r\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n            <feBlend\r\n              mode=\"normal\"\r\n              in=\"SourceGraphic\"\r\n              in2=\"BackgroundImageFix\"\r\n              result=\"shape\"\r\n            />\r\n            <feGaussianBlur\r\n              stdDeviation=\"2\"\r\n              result=\"effect1_foregroundBlur_94_789\"\r\n            />\r\n          </filter>\r\n          <linearGradient\r\n            id=\"paint0_linear_94_789\"\r\n            x1=\"39.9174\"\r\n            y1=\"14.1458\"\r\n            x2=\"29.0794\"\r\n            y2=\"27.1649\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"paint1_linear_94_789\"\r\n            x1=\"41.9174\"\r\n            y1=\"12.1458\"\r\n            x2=\"31.0794\"\r\n            y2=\"25.1649\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"paint2_linear_94_789\"\r\n            x1=\"34.7873\"\r\n            y1=\"21.1877\"\r\n            x2=\"30.9124\"\r\n            y2=\"27.3938\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#3DCDFF\" />\r\n            <stop offset=\"1\" stopColor=\"#B119FF\" />\r\n          </linearGradient>\r\n          <clipPath id=\"clip0_94_789\">\r\n            <rect\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"white\"\r\n              transform=\"translate(15.0078 15)\"\r\n            />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export const ButtonDiscordIcon = () => {\r\n    return (\r\n      <svg\r\n        width=\"30\"\r\n        height=\"31\"\r\n        viewBox=\"0 0 30 31\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g clipPath=\"url(#clip0_94_618)\">\r\n          <path\r\n            d=\"M25.3972 5.54292C23.4519 4.65017 21.3992 4.01301 19.2903 3.6473C19.2712 3.64408 19.2516 3.64686 19.2341 3.65525C19.2167 3.66365 19.2022 3.67724 19.1928 3.69417C18.9284 4.16292 18.6359 4.77605 18.4316 5.25605C16.1583 4.91106 13.8461 4.91106 11.5728 5.25605C11.3448 4.72134 11.0869 4.19989 10.8003 3.69417C10.7907 3.67743 10.7762 3.66399 10.7588 3.65562C10.7414 3.64726 10.7219 3.64435 10.7028 3.6473C8.59344 4.01105 6.54032 4.64855 4.59594 5.54292C4.5793 5.54927 4.56539 5.5612 4.55657 5.57667C0.667817 11.3873 -0.399058 17.0554 0.124067 22.6523C0.125942 22.6785 0.142817 22.7048 0.163442 22.7217C2.42792 24.3991 4.9608 25.6798 7.65407 26.5092C7.67308 26.5152 7.69351 26.515 7.7124 26.5085C7.73128 26.5021 7.74763 26.4899 7.75907 26.4735C8.33657 25.686 8.85032 24.8554 9.29282 23.9817C9.30204 23.9637 9.3052 23.9432 9.30182 23.9232C9.29844 23.9033 9.2887 23.885 9.27407 23.871C9.26438 23.8619 9.25288 23.8549 9.24032 23.8504C8.43249 23.54 7.65012 23.167 6.90032 22.7348C6.87937 22.7229 6.8638 22.7035 6.85682 22.6804C6.84984 22.6574 6.85198 22.6325 6.86282 22.611C6.8692 22.5971 6.87884 22.5849 6.89094 22.5754C7.04844 22.4573 7.20594 22.3335 7.35594 22.2098C7.36919 22.1991 7.38509 22.1923 7.40193 22.19C7.41878 22.1877 7.43594 22.19 7.45157 22.1967C12.3622 24.4392 17.6778 24.4392 22.5284 22.1967C22.5446 22.1897 22.5624 22.1872 22.5799 22.1895C22.5974 22.1918 22.614 22.1988 22.6278 22.2098C22.7778 22.3335 22.9353 22.4573 23.0928 22.5754C23.1056 22.5847 23.1158 22.5971 23.1227 22.6114C23.1295 22.6256 23.1327 22.6413 23.1319 22.6571C23.1312 22.6729 23.1265 22.6883 23.1184 22.7018C23.1103 22.7154 23.0989 22.7267 23.0853 22.7348C22.3372 23.1709 21.5538 23.5435 20.7434 23.8485C20.7305 23.8532 20.7188 23.8607 20.7091 23.8704C20.6993 23.8801 20.6919 23.8919 20.6872 23.9048C20.6829 23.9173 20.6811 23.9306 20.6821 23.9438C20.6831 23.957 20.6867 23.9699 20.6928 23.9817C21.1428 24.8535 21.6584 25.686 22.2247 26.4735C22.2361 26.4899 22.2525 26.5021 22.2714 26.5085C22.2902 26.515 22.3107 26.5152 22.3297 26.5092C25.0275 25.6823 27.5645 24.4015 29.8316 22.7217C29.8429 22.7138 29.8524 22.7035 29.8592 22.6915C29.866 22.6795 29.87 22.6661 29.8709 22.6523C30.4972 16.1817 28.8228 10.5604 25.4347 5.57855C25.4313 5.57032 25.4262 5.5629 25.4197 5.55676C25.4133 5.55063 25.4056 5.54591 25.3972 5.54292ZM10.0259 19.2435C8.54657 19.2435 7.32969 17.886 7.32969 16.221C7.32969 14.5542 8.52407 13.1967 10.0259 13.1967C11.5391 13.1967 12.7447 14.5654 12.7222 16.221C12.7222 17.886 11.5278 19.2435 10.0259 19.2435ZM19.9934 19.2435C18.5159 19.2435 17.2972 17.886 17.2972 16.221C17.2972 14.5542 18.4916 13.1967 19.9934 13.1967C21.5066 13.1967 22.7141 14.5654 22.6897 16.221C22.6897 17.886 21.5066 19.2435 19.9934 19.2435Z\"\r\n            fill=\"white\"\r\n          />\r\n        </g>\r\n        <defs>\r\n          <clipPath id=\"clip0_94_618\">\r\n            <rect\r\n              width=\"30\"\r\n              height=\"30\"\r\n              fill=\"white\"\r\n              transform=\"translate(0 0.0922852)\"\r\n            />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export const WatchIcon = () => {\r\n    return (\r\n      <svg\r\n        width=\"35\"\r\n        height=\"35\"\r\n        viewBox=\"0 0 35 35\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M16.3209 1.86755C16.9397 1.51028 17.7021 1.51028 18.3209 1.86755L30.0895 8.66216C30.7083 9.01943 31.0895 9.67968 31.0895 10.3942V23.9834C31.0895 24.698 30.7083 25.3582 30.0895 25.7155L18.3209 32.5101C17.7021 32.8674 16.9397 32.8674 16.3209 32.5101L4.55229 25.7155C3.93349 25.3582 3.55229 24.698 3.55229 23.9834V10.3942C3.55229 9.67968 3.93349 9.01943 4.55229 8.66216L16.3209 1.86755Z\"\r\n          stroke=\"white\"\r\n          strokeWidth=\"2\"\r\n        />\r\n        <path\r\n          d=\"M21.7227 15.4567C23.056 16.2265 23.056 18.151 21.7227 18.9208L16.6183 21.8678C15.285 22.6376 13.6183 21.6754 13.6183 20.1358L13.6183 14.2418C13.6183 12.7022 15.285 11.7399 16.6183 12.5097L21.7227 15.4567Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n  ","export default __webpack_public_path__ + \"static/media/pink-bg-img.8089df4c.png\";","import React from \"react\";\r\nimport logoimg from \"./img/logo.png\";\r\nimport { DiscordIcon, InstaIcon, TwitterIcon } from \"./Icons\";\r\nimport purple from \"./img/pink-bg-img.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    //   FOOTER SECTION\r\n    <div>\r\n    <section className=\"footer-section position-relative pt-5 pb-3\">\r\n      <div>\r\n        <img className=\"d-block mx-auto\" src={logoimg} alt=\"logoimg\" />\r\n      </div>\r\n      <div className=\"text-center mt-4 position-relative z-5\">\r\n        <a href=\"https://twitter.com/Dimenxion_io\">\r\n          {\" \"}\r\n          <TwitterIcon />\r\n        </a>\r\n        <a href=\"https://www.instagram.com/dimenxion.io/\">\r\n          <InstaIcon />\r\n        </a>\r\n        <a href=\"https://discord.gg/xvpPVNhxQA\">\r\n          <DiscordIcon />\r\n        </a>\r\n      </div>\r\n      <div className=\"footer-border my-4\"></div>\r\n      <p className=\"copyright-text mb-0 pb-3 text-center\">\r\n        Copyright@Dimenxion.io.com\r\n      </p>\r\n      <img className=\"purple-img \" src={purple} alt=\"shade-purple\" />\r\n    </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/headerlogo.19880ef4.png\";","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport * as anchor from \"@project-serum/anchor\";\n\n\nimport { LinearProgress, Snackbar} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport confetti from \"canvas-confetti\";\nimport {WalletMultiButton} from \"@solana/wallet-adapter-react-ui\";\n\nimport {\n  Commitment,\n  Connection,\n  PublicKey,\n  Transaction,\n} from \"@solana/web3.js\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport {\n  awaitTransactionSignatureConfirmation,\n  CANDY_MACHINE_PROGRAM,\n  CandyMachineAccount,\n  createAccountsForMint,\n  getCandyMachineState,\n  getCollectionPDA,\n  mintOneToken,\n  SetupState,\n} from \"./candy-machine\";\nimport { AlertState, formatNumber, getAtaForMint, toDate } from \"./utils\";\nimport { MintCountdown } from \"./MintCountdown\";\nimport { MintButton } from \"./MintButton\";\nimport { GatewayProvider } from \"@civic/solana-gateway-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\n\nimport portals from './img/portals.gif';\nimport Footer from \"./Footer\";\nimport HeaderLogo from \"./assets/img/png/headerlogo.png\";\n\n // add your owns styles here\n\n\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n  error?: string;\n}\n\nconst Home = (props: HomeProps) => {\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [endDate, setEndDate] = useState<Date>();\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\n  const [isPresale, setIsPresale] = useState(false);\n  const [isValidBalance, setIsValidBalance] = useState(false);\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n  const cluster = props.network;\n  function throwConfetti(): void {\n    confetti({\n        particleCount: 400,\n        spread: 70,\n        origin: {y: 0.6},\n    });\n  }\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(\n    async (commitment: Commitment = \"confirmed\") => {\n      if (!anchorWallet) {\n        return;\n      }\n      if (props.error !== undefined) {\n        setAlertState({\n          open: true,\n          message: props.error,\n          severity: \"error\",\n          hideDuration: null,\n        });\n        return;\n      }\n\n      const connection = new Connection(props.rpcHost, commitment);\n\n      if (props.candyMachineId) {\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            connection\n          );\n          console.log(\"Candy machine state: \", cndy);\n          let active = cndy?.state.goLiveDate\n            ? cndy?.state.goLiveDate.toNumber() < new Date().getTime() / 1000\n            : false;\n          let presale = false;\n\n          // duplication of state to make sure we have the right values!\n          let isWLUser = false;\n          let userPrice = cndy.state.price;\n\n          // whitelist mint?\n          if (cndy?.state.whitelistMintSettings) {\n            // is it a presale mint?\n            if (\n              cndy.state.whitelistMintSettings.presale &&\n              (!cndy.state.goLiveDate ||\n                cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\n            ) {\n              presale = true;\n            }\n            // is there a discount?\n            if (cndy.state.whitelistMintSettings.discountPrice) {\n              setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\n              userPrice = cndy.state.whitelistMintSettings.discountPrice;\n            } else {\n              setDiscountPrice(undefined);\n              // when presale=false and discountPrice=null, mint is restricted\n              // to whitelist users only\n              if (!cndy.state.whitelistMintSettings.presale) {\n                cndy.state.isWhitelistOnly = true;\n              }\n            }\n            // retrieves the whitelist token\n            const mint = new anchor.web3.PublicKey(\n              cndy.state.whitelistMintSettings.mint\n            );\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n              isWLUser = parseInt(balance.value.amount) > 0;\n              // only whitelist the user if the balance > 0\n              setIsWhitelistUser(isWLUser);\n\n              if (cndy.state.isWhitelistOnly) {\n                active = isWLUser && (presale || active);\n              }\n            } catch (e) {\n              setIsWhitelistUser(false);\n              // no whitelist user, no mint\n              if (cndy.state.isWhitelistOnly) {\n                active = false;\n              }\n              console.log(\n                \"There was a problem fetching whitelist token balance\"\n              );\n              console.log(e);\n            }\n          }\n          userPrice = isWLUser ? userPrice : cndy.state.price;\n\n          if (cndy?.state.tokenMint) {\n            // retrieves the SPL token\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\n\n              // only allow user to mint if token balance >  the user if the balance > 0\n              setIsValidBalance(valid);\n              active = active && valid;\n            } catch (e) {\n              setIsValidBalance(false);\n              active = false;\n              // no whitelist user, no mint\n              console.log(\"There was a problem fetching SPL token balance\");\n              console.log(e);\n            }\n          } else {\n            const balance = new anchor.BN(\n              await connection.getBalance(anchorWallet.publicKey)\n            );\n            const valid = balance.gte(userPrice);\n            setIsValidBalance(valid);\n            active = active && valid;\n          }\n\n          // datetime to stop the mint?\n          if (cndy?.state.endSettings?.endSettingType.date) {\n            setEndDate(toDate(cndy.state.endSettings.number));\n            if (\n              cndy.state.endSettings.number.toNumber() <\n              new Date().getTime() / 1000\n            ) {\n              active = false;\n            }\n          }\n          // amount to stop the mint?\n          if (cndy?.state.endSettings?.endSettingType.amount) {\n            const limit = Math.min(\n              cndy.state.endSettings.number.toNumber(),\n              cndy.state.itemsAvailable\n            );\n            if (cndy.state.itemsRedeemed < limit) {\n              setItemsRemaining(limit - cndy.state.itemsRedeemed);\n            } else {\n              setItemsRemaining(0);\n              cndy.state.isSoldOut = true;\n            }\n          } else {\n            setItemsRemaining(cndy.state.itemsRemaining);\n          }\n\n          if (cndy.state.isSoldOut) {\n            active = false;\n          }\n\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\n          const collectionPDAAccount = await connection.getAccountInfo(\n            collectionPDA\n          );\n\n          setIsActive((cndy.state.isActive = active));\n          setIsPresale((cndy.state.isPresale = presale));\n          setCandyMachine(cndy);\n\n          const txnEstimate =\n            892 +\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\n            (cndy.state.tokenMint ? 66 : 0) +\n            (cndy.state.whitelistMintSettings ? 34 : 0) +\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 34 : 0) +\n            (cndy.state.gatekeeper ? 33 : 0) +\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\n\n          setNeedTxnSplit(txnEstimate > 1230);\n        } catch (e) {\n          if (e instanceof Error) {\n            if (\n              e.message === `Account does not exist ${props.candyMachineId}`\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\n                severity: \"error\",\n                hideDuration: null,\n              });\n            } else if (\n              e.message.startsWith(\"failed to get info about account\")\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\n                severity: \"error\",\n                hideDuration: null,\n              });\n            }\n          } else {\n            setAlertState({\n              open: true,\n              message: `${e}`,\n              severity: \"error\",\n              hideDuration: null,\n            });\n          }\n          console.log(e);\n        }\n      } else {\n        setAlertState({\n          open: true,\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\n          severity: \"error\",\n          hideDuration: null,\n        });\n      }\n    },\n    [anchorWallet, props.candyMachineId, props.error, props.rpcHost]\n  );\n\n  const onMint = async (\n    beforeTransactions: Transaction[] = [],\n    afterTransactions: Transaction[] = []\n  ) => {\n    try {\n      setIsUserMinting(true);\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        let setupMint: SetupState | undefined;\n        if (needTxnSplit && setupTxn === undefined) {\n          setAlertState({\n            open: true,\n            message: \"Please sign account setup transaction\",\n            severity: \"info\",\n          });\n          setupMint = await createAccountsForMint(\n            candyMachine,\n            wallet.publicKey\n          );\n          let status: any = { err: true };\n          if (setupMint.transaction) {\n            status = await awaitTransactionSignatureConfirmation(\n              setupMint.transaction,\n              props.txTimeout,\n              props.connection,\n              true\n            );\n          }\n          if (status && !status.err) {\n            setSetupTxn(setupMint);\n            setAlertState({\n              open: true,\n              message:\n                \"Setup transaction succeeded! Please sign minting transaction\",\n              severity: \"info\",\n            });\n          } else {\n            setAlertState({\n              open: true,\n              message: \"Mint failed! Please try again!\",\n              severity: \"error\",\n            });\n            setIsUserMinting(false);\n            return;\n          }\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Please sign minting transaction\",\n            severity: \"info\",\n          });\n        }\n\n        const mintResult = await mintOneToken(\n          candyMachine,\n          wallet.publicKey,\n          beforeTransactions,\n          afterTransactions,\n          setupMint ?? setupTxn\n        );\n\n        let status: any = { err: true };\n        let metadataStatus = null;\n        if (mintResult) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintResult.mintTxId,\n            props.txTimeout,\n            props.connection,\n            true\n          );\n\n          metadataStatus =\n            await candyMachine.program.provider.connection.getAccountInfo(\n              mintResult.metadataKey,\n              \"processed\"\n            );\n          console.log(\"Metadata status: \", !!metadataStatus);\n        }\n\n        if (status && !status.err && metadataStatus) {\n          // manual update since the refresh might not detect\n          // the change immediately\n          const remaining = itemsRemaining! - 1;\n          setItemsRemaining(remaining);\n          setIsActive((candyMachine.state.isActive = remaining > 0));\n          candyMachine.state.isSoldOut = remaining === 0;\n          setSetupTxn(undefined);\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n            hideDuration: 7000,\n          });\n          throwConfetti();\n          refreshCandyMachineState(\"processed\");\n        } else if (status && !status.err) {\n          setAlertState({\n            open: true,\n            message:\n              \"Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.\",\n            severity: \"error\",\n            hideDuration: 8000,\n          });\n          refreshCandyMachineState();\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n          refreshCandyMachineState();\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (!error.message) {\n          message = \"Transaction timeout! Please try again.\";\n        } else if (error.message.indexOf(\"0x137\")) {\n          console.log(error);\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          console.log(error);\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n      // updates the candy machine state to reflect the latest\n      // information on chain\n      refreshCandyMachineState();\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  const toggleMintButton = () => {\n    let active = !isActive || isPresale;\n\n    if (active) {\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\n        active = false;\n      }\n      if (endDate && Date.now() >= endDate.getTime()) {\n        active = false;\n      }\n    }\n\n    if (\n      isPresale &&\n      candyMachine!.state.goLiveDate &&\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\n    ) {\n      setIsPresale((candyMachine!.state.isPresale = false));\n    }\n\n    setIsActive((candyMachine!.state.isActive = active));\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        refreshCandyMachineState();\n        loop();\n      }, 20000);\n    })();\n  }, [refreshCandyMachineState]);\n\n  return (\n    <>\n      <section className=\"w-100 navbar-wrapper position-relative py-lg-3 \">\n                    <div className=\"container d-flex justify-content-between align-items-center \">\n                        <li className=\"mx-xxl-3 mx-1 nav-list-items p-2 d-inline-block active \" >\n                            <a href=\"/\">Home</a>\n                        </li>\n                        <li  className=\"custom d-inline-block\">\n                            <img className=\"nav-logo\" src={HeaderLogo} alt=\"HeaderLogo\" />\n                        </li>\n                        <WalletMultiButton/>\n                    </div>\n                </section>\n                <div className=\"mini-page\">\n                        <div className=\"container\">\n                            <div className=\"row justify-content-center text-center\">\n                                <div className=\"col-sm-10 col-12 py-5\">\n                                    <div className=\"mini-page-card gradient-border \">\n                                    <h2>Portals</h2>\n                                    <img className=\"mb-lg-2 w-100 img-1\" src={portals} alt=\"NFT To Mint\"/>\n          {!wallet.connected ? (<h3>Please Connect Your Wallet</h3>) : (<>\n\n\n              {candyMachine && (\n                <>\n                  <br/>\n                    <h3>\n                    TOTAL MINTED  : {`${itemsRemaining}`} / 800\n                    </h3>\n\n\n                    <h3>\n                      {isWhitelistUser && discountPrice\n                        ? \"Discount Price\"\n                        : \"Price\"}\n                      {isWhitelistUser && discountPrice\n                        ? ` ${formatNumber.asNumber(discountPrice)} SOL`\n                        : ` ${formatNumber.asNumber(candyMachine.state.price)} SOL`}\n                    </h3>\n\n\n                  <LinearProgress className=\"my-lg-5 my-3 mx-xxl-5\" variant=\"determinate\" value={100 - (itemsRemaining! * 100 / 800)}/>\n\n                    {isActive && endDate && Date.now() < endDate.getTime() ? (\n                      <>\n\n                        <MintCountdown\n                          key=\"endSettings\"\n                          date={getCountdownDate(candyMachine)}\n                          style={{ justifyContent: \"flex-end\" }}\n                          status=\"COMPLETED\"\n                          onComplete={toggleMintButton}\n                        />\n                        <h2>\n                          TO END OF MINT\n                        </h2>\n                      </>) : (<>\n\n                        <h2>{\n                            candyMachine?.state?.isSoldOut ||\n                            (endDate && Date.now() > endDate.getTime())\n                              ? \"COMPLETED\"\n                              : isPresale\n                              ? \"PRESALE\"\n                              : \"LIVE\"\n                          }</h2>\n\n                        {isPresale &&\n                          candyMachine.state.goLiveDate &&\n                          candyMachine.state.goLiveDate.toNumber() >\n                            new Date().getTime() / 1000 && (\n                            <h2>\n                              UNTIL PUBLIC MINT\n                            </h2>\n                          )}\n\n                      </>\n                    )}\n\n                </>\n              )}\n                {candyMachine?.state.isActive &&\n                candyMachine?.state.gatekeeper &&\n                wallet.publicKey &&\n                wallet.signTransaction ? (\n                  <div className=\"d-lg-flex justify-content-center px-lg-5 px-sm-3 position-relative z-5\">\n                        <div className=\"mt-3 mt-lg-0 mx-auto \">\n                  <GatewayProvider\n                    wallet={{\n                      publicKey:\n                        wallet.publicKey ||\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\n                      //@ts-ignore\n                      signTransaction: wallet.signTransaction,\n                    }}\n                    gatekeeperNetwork={\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                    }\n                    clusterUrl={rpcUrl}\n                    cluster={cluster}\n                    options={{ autoShowModal: false }}\n                  >\n                    <MintButton\n                      candyMachine={candyMachine}\n                      isMinting={isUserMinting}\n                      setIsMinting={(val) => setIsUserMinting(val)}\n                      onMint={onMint}\n                      isActive={\n                        isActive ||\n                        (isPresale && isWhitelistUser && isValidBalance)\n                      }\n                    />\n                  </GatewayProvider>\n                  </div>\n                      </div> ) : ( <div className=\"d-lg-flex justify-content-center px-lg-5 px-sm-3 position-relative z-5\">\n                        <div className=\"mt-3 mt-lg-0 mx-auto \">\n                  <MintButton\n                    candyMachine={candyMachine}\n                    isMinting={isUserMinting}\n                    setIsMinting={(val) => setIsUserMinting(val)}\n                    onMint={onMint}\n                    isActive={\n                      isActive ||\n                      (isPresale && isWhitelistUser && isValidBalance)\n                    }\n                  />\n                  </div>\n                      </div>\n                )}\n\n            </>\n          )}\n          </div>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={\n          alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n        }\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n      <Footer/>\n    </>\n  );\n};\n\nconst getCountdownDate = (\n  candyMachine: CandyMachineAccount\n): Date | undefined => {\n  if (\n    candyMachine.state.isActive &&\n    candyMachine.state.endSettings?.endSettingType.date\n  ) {\n    return toDate(candyMachine.state.endSettings.number);\n  }\n\n  return toDate(\n    candyMachine.state.goLiveDate\n      ? candyMachine.state.goLiveDate\n      : candyMachine.state.isPresale\n      ? new anchor.BN(new Date().getTime() / 1000)\n      : undefined\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport { useMemo } from \"react\";\nimport * as anchor from \"@project-serum/anchor\";\nimport Home from \"./Home\";\nimport { DEFAULT_TIMEOUT } from \"./connection\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n//import { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\n  try {\n    return new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID!);\n  } catch (e) {\n    console.log(\"Failed to construct CandyMachineId\", e);\n    return undefined;\n  }\n};\n\nlet error: string | undefined = undefined;\n\nif (process.env.REACT_APP_SOLANA_NETWORK === undefined) {\n  error =\n    \"Your REACT_APP_SOLANA_NETWORK value in the .env file doesn't look right! The options are devnet and mainnet-beta!\";\n} else if (process.env.REACT_APP_SOLANA_RPC_HOST === undefined) {\n  error =\n    \"Your REACT_APP_SOLANA_RPC_HOST value in the .env file doesn't look right! Make sure you enter it in as a plain-text url (i.e., https://metaplex.devnet.rpcpool.com/)\";\n}\n\nconst candyMachineId = getCandyMachineId();\nconst network = (process.env.REACT_APP_SOLANA_NETWORK ??\n  \"devnet\") as WalletAdapterNetwork;\nconst rpcHost =\n  process.env.REACT_APP_SOLANA_RPC_HOST ?? anchor.web3.clusterApiUrl(\"devnet\");\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst App = () => {\n  AOS.init({ once: true });\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getSlopeWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    []\n  );\n\n  return (\n\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletModalProvider>\n            <Home\n              candyMachineId={candyMachineId}\n              connection={connection}\n              txTimeout={DEFAULT_TIMEOUT}\n              rpcHost={rpcHost}\n              network={network}\n              error={error}\n            />\n          </WalletModalProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as anchor from \"@project-serum/anchor\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { SystemProgram } from \"@solana/web3.js\";\nimport {\n  LAMPORTS_PER_SOL,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nexport interface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n  hideDuration?: number | null;\n}\n\nexport const toDate = (value?: anchor.BN) => {\n  if (!value) {\n    return;\n  }\n\n  return new Date(value.toNumber() * 1000);\n};\n\nconst numberFormater = new Intl.NumberFormat(\"en-US\", {\n  style: \"decimal\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const formatNumber = {\n  format: (val?: number) => {\n    if (!val) {\n      return \"--\";\n    }\n\n    return numberFormater.format(val);\n  },\n  asNumber: (val?: anchor.BN) => {\n    if (!val) {\n      return undefined;\n    }\n\n    return val.toNumber() / LAMPORTS_PER_SOL;\n  },\n};\n\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\n  new anchor.web3.PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\n\nexport const CIVIC = new anchor.web3.PublicKey(\n  \"gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs\"\n);\n\nexport const CIVIC_GATEKEEPER_NETWORK =\n  \"ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6\";\n\nexport const getAtaForMint = async (\n  mint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n  );\n};\n\nexport const getNetworkExpire = async (\n  gatekeeperNetwork: anchor.web3.PublicKey\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [gatekeeperNetwork.toBuffer(), Buffer.from(\"expire\")],\n    CIVIC\n  );\n};\n\nexport const getNetworkToken = async (\n  wallet: anchor.web3.PublicKey,\n  gatekeeperNetwork: anchor.web3.PublicKey\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      wallet.toBuffer(),\n      Buffer.from(\"gateway\"),\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\n      gatekeeperNetwork.toBuffer(),\n    ],\n    CIVIC\n  );\n};\n\nexport function createAssociatedTokenAccountInstruction(\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) {\n  const keys = [\n    {\n      pubkey: payer,\n      isSigner: true,\n      isWritable: true,\n    },\n    {\n      pubkey: associatedTokenAddress,\n      isSigner: false,\n      isWritable: true,\n    },\n    {\n      pubkey: walletAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: splTokenMintAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n","/* eslint-disable */\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from \"@solana/spl-token\";\nimport {\n  SystemProgram,\n  Transaction,\n  SYSVAR_SLOT_HASHES_PUBKEY,\n} from \"@solana/web3.js\";\nimport { sendTransactions, SequenceType } from \"./connection\";\n\nimport {\n  CIVIC,\n  getAtaForMint,\n  getNetworkExpire,\n  getNetworkToken,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from \"./utils\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\ninterface CandyMachineState {\n  authority: anchor.web3.PublicKey;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: null | anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  isPresale: boolean;\n  isWhitelistOnly: boolean;\n  goLiveDate: null | anchor.BN;\n  price: anchor.BN;\n  gatekeeper: null | {\n    expireOnUse: boolean;\n    gatekeeperNetwork: anchor.web3.PublicKey;\n  };\n  endSettings: null | {\n    number: anchor.BN;\n    endSettingType: any;\n  };\n  whitelistMintSettings: null | {\n    mode: any;\n    mint: anchor.web3.PublicKey;\n    presale: boolean;\n    discountPrice: null | anchor.BN;\n  };\n  hiddenSettings: null | {\n    name: string;\n    uri: string;\n    hash: Uint8Array;\n  };\n  retainAuthority: boolean;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  const subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  try {\n    await connection.removeSignatureListener(subId);\n  } catch (e) {\n    // ignore\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n};\n\nconst createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"processed\",\n  });\n\n  const getProgramState = async (): Promise<[anchor.Program, any]> => {\n    const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n    const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\n    const state: any = await program.account.candyMachine.fetch(candyMachineId);\n    return [program, state];\n  };\n\n  const getCurrentBlockTime = async (): Promise<number> => {\n    const slot = await connection.getSlot();\n    return (await connection.getBlockTime(slot)) ?? new Date().getTime() / 1000;\n  };\n\n  const [[program, state], currentBlockTime] = await Promise.all([\n    getProgramState(),\n    getCurrentBlockTime(),\n  ]);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n  const timeDiff = new Date().getTime() / 1000 - currentBlockTime;\n  const goLiveDate =\n    state.data.goLiveDate !== null ? state.data.goLiveDate + timeDiff : null;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      authority: state.authority,\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: false,\n      isPresale: false,\n      isWhitelistOnly: false,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      gatekeeper: state.data.gatekeeper,\n      endSettings: state.data.endSettings,\n      whitelistMintSettings: state.data.whitelistMintSettings,\n      hiddenSettings: state.data.hiddenSettings,\n      price: state.data.price,\n      retainAuthority: state.data.retainAuthority,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const getCandyMachineCreator = async (\n  candyMachine: anchor.web3.PublicKey\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(\"candy_machine\"), candyMachine.toBuffer()],\n    CANDY_MACHINE_PROGRAM\n  );\n};\n\nexport const getCollectionPDA = async (\n  candyMachineAddress: anchor.web3.PublicKey\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from(\"collection\"), candyMachineAddress.toBuffer()],\n    CANDY_MACHINE_PROGRAM\n  );\n};\n\nexport interface CollectionData {\n  mint: anchor.web3.PublicKey;\n  candyMachine: anchor.web3.PublicKey;\n}\n\nexport const getCollectionAuthorityRecordPDA = async (\n  mint: anchor.web3.PublicKey,\n  newAuthority: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"collection_authority\"),\n        newAuthority.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport type SetupState = {\n  mint: anchor.web3.Keypair;\n  userTokenAccount: anchor.web3.PublicKey;\n  transaction: string;\n};\n\nexport const createAccountsForMint = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey\n): Promise<SetupState> => {\n  const mint = anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1\n    ),\n  ];\n\n  return {\n    mint: mint,\n    userTokenAccount: userTokenAccountAddress,\n    transaction: (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        [instructions],\n        [signers],\n        SequenceType.StopOnFailure,\n        \"singleGossip\",\n        () => {},\n        () => false,\n        undefined,\n        [],\n        []\n      )\n    ).txs[0].txid,\n  };\n};\n\ntype MintResult = {\n  mintTxId: string;\n  metadataKey: anchor.web3.PublicKey;\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n  beforeTransactions: Transaction[] = [],\n  afterTransactions: Transaction[] = [],\n  setupState?: SetupState\n): Promise<MintResult | null> => {\n  const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = candyMachine.state.tokenMint\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\n    : payer;\n\n  const candyMachineAddress = candyMachine.id;\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers: anchor.web3.Keypair[] = [];\n  console.log(\"SetupState: \", setupState);\n  if (!setupState) {\n    signers.push(mint);\n    instructions.push(\n      ...[\n        anchor.web3.SystemProgram.createAccount({\n          fromPubkey: payer,\n          newAccountPubkey: mint.publicKey,\n          space: MintLayout.span,\n          lamports:\n            await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n              MintLayout.span\n            ),\n          programId: TOKEN_PROGRAM_ID,\n        }),\n        Token.createInitMintInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          0,\n          payer,\n          payer\n        ),\n        createAssociatedTokenAccountInstruction(\n          userTokenAccountAddress,\n          payer,\n          payer,\n          mint.publicKey\n        ),\n        Token.createMintToInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          userTokenAccountAddress,\n          payer,\n          [],\n          1\n        ),\n      ]\n    );\n  }\n\n  if (candyMachine.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          candyMachine.state.gatekeeper.gatekeeperNetwork\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            candyMachine.state.gatekeeper.gatekeeperNetwork\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (candyMachine.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      candyMachine.state.whitelistMintSettings.mint\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: payer,\n        isWritable: false,\n        isSigner: true,\n      });\n    }\n  }\n\n  if (candyMachine.state.tokenMint) {\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: payer,\n      isWritable: false,\n      isSigner: true,\n    });\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\n    candyMachineAddress\n  );\n\n  console.log(remainingAccounts.map((rm) => rm.pubkey.toBase58()));\n  instructions.push(\n    await candyMachine.program.instruction.mintNft(creatorBump, {\n      accounts: {\n        candyMachine: candyMachineAddress,\n        candyMachineCreator,\n        payer: payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    })\n  );\n\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\n  const collectionPDAAccount =\n    await candyMachine.program.provider.connection.getAccountInfo(\n      collectionPDA\n    );\n\n  if (collectionPDAAccount && candyMachine.state.retainAuthority) {\n    try {\n      const collectionData =\n        (await candyMachine.program.account.collectionPda.fetch(\n          collectionPDA\n        )) as CollectionData;\n      console.log(collectionData);\n      const collectionMint = collectionData.mint;\n      const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\n        collectionMint,\n        collectionPDA\n      );\n      console.log(collectionMint);\n      if (collectionMint) {\n        const collectionMetadata = await getMetadata(collectionMint);\n        const collectionMasterEdition = await getMasterEdition(collectionMint);\n        console.log(\"Collection PDA: \", collectionPDA.toBase58());\n        console.log(\"Authority: \", candyMachine.state.authority.toBase58());\n        instructions.push(\n          await candyMachine.program.instruction.setCollectionDuringMint({\n            accounts: {\n              candyMachine: candyMachineAddress,\n              metadata: metadataAddress,\n              payer: payer,\n              collectionPda: collectionPDA,\n              tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n              instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n              collectionMint,\n              collectionMetadata,\n              collectionMasterEdition,\n              authority: candyMachine.state.authority,\n              collectionAuthorityRecord,\n            },\n          })\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const instructionsMatrix = [instructions];\n  const signersMatrix = [signers];\n\n  try {\n    const txns = (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        instructionsMatrix,\n        signersMatrix,\n        SequenceType.StopOnFailure,\n        \"singleGossip\",\n        () => {},\n        () => false,\n        undefined,\n        beforeTransactions,\n        afterTransactions\n      )\n    ).txs.map((t) => t.txid);\n    const mintTxn = txns[0];\n    return {\n      mintTxId: mintTxn,\n      metadataKey: metadataAddress,\n    };\n  } catch (e) {\n    console.log(e);\n  }\n  return null;\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n","/* eslint-disable */\nimport {\n  Keypair,\n  Commitment,\n  Connection,\n  RpcResponseAndContext,\n  SignatureStatus,\n  SimulatedTransactionResponse,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n  Blockhash,\n  FeeCalculator,\n} from \"@solana/web3.js\";\n\nimport { WalletNotConnectedError } from \"@solana/wallet-adapter-base\";\n\ninterface BlockhashAndFeeCalculator {\n  blockhash: Blockhash;\n  feeCalculator: FeeCalculator;\n}\n\nexport const DEFAULT_TIMEOUT = 60000;\n\nexport const getErrorForTransaction = async (\n  connection: Connection,\n  txid: string\n) => {\n  // wait for all confirmation before geting transaction\n  await connection.confirmTransaction(txid, \"max\");\n\n  const tx = await connection.getParsedConfirmedTransaction(txid);\n\n  const errors: string[] = [];\n  if (tx?.meta && tx.meta.logMessages) {\n    tx.meta.logMessages.forEach((log) => {\n      const regex = /Error: (.*)/gm;\n      let m;\n      while ((m = regex.exec(log)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === regex.lastIndex) {\n          regex.lastIndex++;\n        }\n\n        if (m.length > 1) {\n          errors.push(m[1]);\n        }\n      }\n    });\n  }\n\n  return errors;\n};\n\nexport enum SequenceType {\n  Sequential,\n  Parallel,\n  StopOnFailure,\n}\n\nexport async function sendTransactionsWithManualRetry(\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[][],\n  signers: Keypair[][]\n): Promise<(string | undefined)[]> {\n  let stopPoint = 0;\n  let tries = 0;\n  let lastInstructionsLength = null;\n  const toRemoveSigners: Record<number, boolean> = {};\n  instructions = instructions.filter((instr, i) => {\n    if (instr.length > 0) {\n      return true;\n    } else {\n      toRemoveSigners[i] = true;\n      return false;\n    }\n  });\n  let ids: string[] = [];\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\n\n  while (stopPoint < instructions.length && tries < 3) {\n    instructions = instructions.slice(stopPoint, instructions.length);\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\n\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\n    else tries = 0;\n\n    try {\n      if (instructions.length === 1) {\n        const id = await sendTransactionWithRetry(\n          connection,\n          wallet,\n          instructions[0],\n          filteredSigners[0],\n          \"single\"\n        );\n        ids.push(id.txid);\n        stopPoint = 1;\n      } else {\n        const { txs } = await sendTransactions(\n          connection,\n          wallet,\n          instructions,\n          filteredSigners,\n          SequenceType.StopOnFailure,\n          \"single\"\n        );\n        ids = ids.concat(txs.map((t) => t.txid));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    console.log(\n      \"Died on \",\n      stopPoint,\n      \"retrying from instruction\",\n      instructions[stopPoint],\n      \"instructions length is\",\n      instructions.length\n    );\n    lastInstructionsLength = instructions.length;\n  }\n\n  return ids;\n}\n\nexport const sendTransactions = async (\n  connection: Connection,\n  wallet: any,\n  instructionSet: TransactionInstruction[][],\n  signersSet: Keypair[][],\n  sequenceType: SequenceType = SequenceType.Parallel,\n  commitment: Commitment = \"singleGossip\",\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\n  block?: BlockhashAndFeeCalculator,\n  beforeTransactions: Transaction[] = [],\n  afterTransactions: Transaction[] = []\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  const unsignedTxns: Transaction[] = beforeTransactions;\n\n  if (!block) {\n    block = await connection.getRecentBlockhash(commitment);\n  }\n\n  for (let i = 0; i < instructionSet.length; i++) {\n    const instructions = instructionSet[i];\n    const signers = signersSet[i];\n\n    if (instructions.length === 0) {\n      continue;\n    }\n\n    const transaction = new Transaction();\n    instructions.forEach((instruction) => transaction.add(instruction));\n    transaction.recentBlockhash = block.blockhash;\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey)\n    );\n\n    if (signers.length > 0) {\n      transaction.partialSign(...signers);\n    }\n\n    unsignedTxns.push(transaction);\n  }\n  unsignedTxns.push(...afterTransactions);\n\n  const partiallySignedTransactions = unsignedTxns.filter((t) =>\n    t.signatures.find((sig) => sig.publicKey.equals(wallet.publicKey))\n  );\n  const fullySignedTransactions = unsignedTxns.filter(\n    (t) => !t.signatures.find((sig) => sig.publicKey.equals(wallet.publicKey))\n  );\n  let signedTxns = await wallet.signAllTransactions(\n    partiallySignedTransactions\n  );\n  signedTxns = fullySignedTransactions.concat(signedTxns);\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\n\n  console.log(\n    \"Signed txns length\",\n    signedTxns.length,\n    \"vs handed in length\",\n    instructionSet.length\n  );\n  for (let i = 0; i < signedTxns.length; i++) {\n    const signedTxnPromise = sendSignedTransaction({\n      connection,\n      signedTransaction: signedTxns[i],\n    });\n\n    if (sequenceType !== SequenceType.Parallel) {\n      try {\n        await signedTxnPromise.then(({ txid, slot }) =>\n          successCallback(txid, i)\n        );\n        pendingTxns.push(signedTxnPromise);\n      } catch (e) {\n        console.log(\"Failed at txn index:\", i);\n        console.log(\"Caught failure:\", e);\n\n        failCallback(signedTxns[i], i);\n        if (sequenceType === SequenceType.StopOnFailure) {\n          return {\n            number: i,\n            txs: await Promise.all(pendingTxns),\n          };\n        }\n      }\n    } else {\n      pendingTxns.push(signedTxnPromise);\n    }\n  }\n\n  if (sequenceType !== SequenceType.Parallel) {\n    const result = await Promise.all(pendingTxns);\n    return { number: signedTxns.length, txs: result };\n  }\n\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\n};\n\nexport const sendTransaction = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[] | Transaction,\n  signers: Keypair[],\n  awaitConfirmation = true,\n  commitment: Commitment = \"singleGossip\",\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction: Transaction;\n  if (!Array.isArray(instructions)) {\n    transaction = instructions;\n  } else {\n    transaction = new Transaction();\n    instructions.forEach((instruction) => transaction.add(instruction));\n    transaction.recentBlockhash = (\n      block || (await connection.getRecentBlockhash(commitment))\n    ).blockhash;\n\n    if (includesFeePayer) {\n      transaction.setSigners(...signers.map((s) => s.publicKey));\n    } else {\n      transaction.setSigners(\n        // fee payed by the wallet owner\n        wallet.publicKey,\n        ...signers.map((s) => s.publicKey)\n      );\n    }\n\n    if (signers.length > 0) {\n      transaction.partialSign(...signers);\n    }\n    if (!includesFeePayer) {\n      transaction = await wallet.signTransaction(transaction);\n    }\n  }\n\n  const rawTransaction = transaction.serialize();\n  const options = {\n    skipPreflight: true,\n    commitment,\n  };\n\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\n  let slot = 0;\n\n  if (awaitConfirmation) {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      DEFAULT_TIMEOUT,\n      connection,\n      commitment\n    );\n\n    if (!confirmation)\n      throw new Error(\"Timed out awaiting confirmation on transaction\");\n    slot = confirmation?.slot || 0;\n\n    if (confirmation?.err) {\n      const errors = await getErrorForTransaction(connection, txid);\n\n      console.log(errors);\n      throw new Error(`Raw transaction ${txid} failed`);\n    }\n  }\n\n  return { txid, slot };\n};\n\nexport const sendTransactionWithRetry = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[],\n  signers: Keypair[],\n  commitment: Commitment = \"singleGossip\",\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n  beforeSend?: () => void\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction = new Transaction();\n  instructions.forEach((instruction) => transaction.add(instruction));\n  transaction.recentBlockhash = (\n    block || (await connection.getRecentBlockhash(commitment))\n  ).blockhash;\n\n  if (includesFeePayer) {\n    transaction.setSigners(...signers.map((s) => s.publicKey));\n  } else {\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey)\n    );\n  }\n\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  if (!includesFeePayer) {\n    transaction = await wallet.signTransaction(transaction);\n  }\n\n  if (beforeSend) {\n    beforeSend();\n  }\n\n  const { txid, slot } = await sendSignedTransaction({\n    connection,\n    signedTransaction: transaction,\n  });\n\n  return { txid, slot };\n};\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<{ txid: string; slot: number }> {\n  const rawTransaction = signedTransaction.serialize();\n\n  const startTime = getUnixTs();\n  let slot = 0;\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    }\n  );\n\n  console.log(\"Started awaiting confirmation for\", txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(500);\n    }\n  })();\n  try {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      timeout,\n      connection,\n      \"recent\",\n      true\n    );\n\n    if (!confirmation)\n      throw new Error(\"Timed out awaiting confirmation on transaction\");\n\n    if (confirmation.err) {\n      console.error(confirmation.err);\n      throw new Error(\"Transaction failed: Custom instruction error\");\n    }\n\n    slot = confirmation?.slot || 0;\n  } catch (err: any) {\n    console.error(\"Timeout Error caught\", err);\n    if (err.timeout) {\n      throw new Error(\"Timed out awaiting confirmation on transaction\");\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, \"single\")\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith(\"Program log: \")) {\n            throw new Error(\n              \"Transaction failed: \" + line.slice(\"Program log: \".length)\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    // throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n\n  console.log(\"Latency\", txid, getUnixTs() - startTime);\n  return { txid, slot };\n}\n\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString(\"base64\");\n  const config: any = { encoding: \"base64\", commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest(\"simulateTransaction\", args);\n  if (res.error) {\n    throw new Error(\"failed to simulate transaction: \" + res.error.message);\n  }\n  return res.result;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n  commitment: Commitment = \"recent\",\n  queryStatus = false\n): Promise<SignatureStatus | null | void> {\n  let done = false;\n  let status: SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result, context) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  try {\n    await connection.removeSignatureListener(subId);\n  } catch (e) {\n    // ignore\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"sourceRoot":""}